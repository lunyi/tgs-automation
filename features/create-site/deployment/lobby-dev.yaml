apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: $lobby
    type: frontend
  name:  $lobby
  namespace: dev
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: $lobby
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $lobby
        type: frontend
    spec:
      containers:
      - env:
        - name: CLIENT
          value: VxSVy4C2tGgoNBq3JVzlJSghtkU3ydxAbdjxUBvZfJUJkgXRb8MM32
        - name: CURRENCY
          value: $currency
        - name: BRAND
          value: PGG
        - name: DEFAULT_LANGUAGE
          value: $lang
        - name: THEME
          value: red
        - name: SOURCE_URL
          value: https://images.srvptt.com/
        image: $image
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 1
        name: $lobby
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 80
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 30m
            memory: 50Mi
          requests:
            cpu: 5m
            memory: 30Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: site-data
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: registry-credentials
      - name: dockerhub
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: site-data
---
apiVersion: v1
kind: Service
metadata:
  name: $lobby
  namespace: dev
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: $lobby
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Brand-Token $token;
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: $lobby
  namespace: dev
spec:
  ingressClassName: nginx
  rules:
  - host: $domain
    http:
      paths:
      - backend:
          service:
            name: brand-api
            port:
              number: 80
        path: /api/brandcommunication
        pathType: ImplementationSpecific
      - backend:
          service:
            name: brand-api
            port:
              number: 80
        path: /api/brandlivechat
        pathType: ImplementationSpecific
      - backend:
          service:
            name: brand-api
            port:
              number: 80
        path: /api/brand/maintenance
        pathType: Prefix
      - backend:
          service:
            name: $lobby
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
      - backend:
          service:
            name: operator-api
            port:
              number: 80
        path: /api
        pathType: ImplementationSpecific